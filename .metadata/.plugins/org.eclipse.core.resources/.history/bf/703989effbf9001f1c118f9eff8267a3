/*
 * generated by Xtext 2.38.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.pMDSL.Entity

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class PMDSLGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile("/candy-shop/src/models.ts", resource.allContents.toIterable.filter(Entity).models)
		
		for (e : resource.allContents.toIterable.filter(Entity)) {
			fsa.generateFile("/candy-shop/src/app/api/" + e.name.toFirstLower + "/route.ts", e.apiRoutes)
			fsa.generateFile("/candy-shop/src/components/" + e.name.toFirstLower + ".tsx", e.components)
		}
	}
	
	def models(Iterable<Entity> entity)'''
	«FOR e : entity»
	export interface «entity.name» {
		«FOR attribute: entity.attributes»
		«attribute.name»: «attribute.type»
		«ENDFOR»
	}
	«ENDFOR»

	'''
	
	def apiRoutes(Entity entity)'''
    import { NextResponse } from "next/server"
    import { «entity.name» } from "@/models"

    const mockData: «entity.name»[] = [];

    export async function GET() {
        return NextResponse.json(mockData, { status: 200 });
    }

    export async function POST(req: Request) {
        const newItem: «entity.name» = await req.json();
        mockData.push(newItem);
        return NextResponse.json(newItem, { status: 201 });
    }
	'''
	
	def components(Entity entity)'''
	import { FC } from 'react'
	import { «entity.name» } from "@/models"
	
	const «entity.name»Component: FC<«entity.name»> = ({ «FOR attribute : entity.attributes SEPARATOR ', '»«attribute.name»«ENDFOR» }) => {
	  return (
	  	«IF entity.name == "Product"»
	  	«productContent()»
	  	«ENDIF»
	  )
	}

	export default «entity.name»
	'''
	
	def productContent()'''
	<div key={id.toString()}>
	  <img alt={description} className='bg-gray-100 w-60 h-60 object-cover rounded-sm' src="https://www.freeiconspng.com/thumbs/gummy-bear-png/blue-gummy-bear-png-0.png" />
      <div className='mt-3'>
        <div className='flex justify-between mb-2'>
          <p className='text-lg font-semibold'>{title}</p>
          <p className='text-lg font-semibold'>{price}</p>
        </div>
        <p className='text-sm text-gray-500'>{description}</p>
      </div>
    </div>
	'''
}
